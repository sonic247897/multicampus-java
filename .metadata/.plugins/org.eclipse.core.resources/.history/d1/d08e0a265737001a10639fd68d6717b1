package api.io;

import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;

public class FileCopy {
	public static void main(String[] args) {
		// FileTest01.java파일 copy하기
		// 1. FileReader로 읽고 FileWriter로 출력하기
		// 2. src/data/copy_result.txt로 생성하기
		// 3. 콘솔로도 출력되도록 작성
		FileReader fs = null;
		FileWriter fw = null;
		try {
			fs = new FileReader("src/api.io/FileTest01.java");
			fw = new FileWriter("src/data/output.txt", true);
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		}finally {
			
		}
		
	}
}
FileWriter fw = new FileWriter("src/data/output.txt", true);
//FileWriter fw = new FileWriter("src/data/output.txt"); //파일 덮어쓰기
// FileNotFoundException이 아니라 IOException인 이유?
// - File출력은 매개변수로 전달된 파일이 있으면 해당 파일을 열고 작업하지만
//	없는 경우 새로 파일을 생성하여 작업한다.

//2. 파일 액세스
fw.write(97); // int데이터->acii에 해당하는 문자가 출력
fw.write("문자열 쓰기\n");
fw.write("test");

//3. 파일 close
fw.close();

FileReader fs = null;
try{
	// 1. 파일 오픈하기
	fs = new FileReader("src/data/test.txt");
	// 2. 파일 액세스
	while(true) {
		int data = fs.read();
		if(data == -1) {
			break;
		}
		// 한글 안깨짐!
		System.out.print((char)data);
	}
}catch(FileNotFoundException e) {
	e.printStackTrace();
}catch (IOException e) {
	e.printStackTrace();
}finally {
	// 3. 파일닫기
	try {
		if(fs != null) fs.close();
	} catch (IOException e) {
		e.printStackTrace();
	}
}